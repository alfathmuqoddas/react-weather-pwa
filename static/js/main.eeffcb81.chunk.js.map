{"version":3,"sources":["App.js","index.js"],"names":["App","useState","weather","setWeather","query","setQuery","getWeather","e","a","preventDefault","url","fetch","res","json","resJson","console","log","main","style","backgroundColor","className","onSubmit","width","type","value","onChange","target","placeholder","list","class","city","name","country","src","icon","alt","temp","toFixed","description","wind","speed","deg","humidity","visibility","ReactDOM","render","document","getElementById"],"mappings":"sMA0DeA,EAxDH,WAEV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBACIC,EAFW,6DAEiDN,EAFjD,iEAGCO,MAAMD,GAHP,cAGXE,EAHW,gBAIKA,EAAIC,OAJT,OAIXC,EAJW,OAKjBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAQG,MAChBH,GACFX,EAAWW,GAEbT,EAAS,IAVQ,4CAAH,sDAahB,OACA,oCACI,yBAAKa,MAAO,CAACC,gBAAiB,YAC9B,yBAAKC,UAAU,kBACjB,wBAAIA,UAAU,0BAAd,qBACE,0BAAMA,UAAU,sBAAsBC,SAAUf,EAAYY,MAAO,CAACI,MAAM,UAClE,2BAAOC,KAAK,OAAOH,UAAU,eAAeI,MAAOpB,EACnDqB,SAAU,SAAClB,GAAD,OAAOF,EAASE,EAAEmB,OAAOF,QACnCG,YAAY,sBACZ,2BAAOJ,KAAK,SAASH,UAAU,kBAAkBI,MAAM,oBAI5DtB,EAAQ0B,MACR,yBAAKR,UAAU,kBACZ,yBAAKA,UAAU,oBAAoBF,MAAO,CAACI,MAAM,UACjD,yBAAKO,MAAM,qCAAoC,4BAAI,8BAChD3B,EAAQ4B,KAAKC,KADmC,KAC3B7B,EAAQ4B,KAAKE,WAErC,yBAAKC,IAAG,4CAAuC/B,EAAQ0B,KAAK,GAAG1B,QAAQ,GAAGgC,KAAlE,WAAiFL,MAAM,eAAeM,IAAI,QAClH,yBAAKf,UAAU,sBACb,wBAAIA,UAAU,yBAAyBlB,EAAQ0B,KAAK,GAAGX,KAAKmB,KAAKC,QAAQ,GAAzE,SACA,wBAAIjB,UAAU,yBAAyBlB,EAAQ0B,KAAK,GAAG1B,QAAQ,GAAGoC,eAGtE,yBAAKlB,UAAU,oBAAoBF,MAAO,CAACI,MAAO,UAC/C,wBAAIO,MAAM,+BACT,wBAAIA,MAAM,mBAAV,SAAmC3B,EAAQ0B,KAAK,GAAGW,KAAKC,MAAxD,UAAsEtC,EAAQ0B,KAAK,GAAGW,KAAKE,IAA3F,QACA,wBAAIZ,MAAM,mBAAV,aAAuC3B,EAAQ0B,KAAK,GAAGX,KAAKyB,SAA5D,KACA,wBAAIb,MAAM,mBAAV,eAAoE,KAA3B3B,EAAQ0B,KAAK,GAAGe,WAAzD,YC5CdC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.eeffcb81.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst App = () => {\n  \n  const [weather, setWeather] = useState({});\n  const [query, setQuery] = useState('');\n  \n  const getWeather = async (e) => {\n    e.preventDefault();\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${query}&appid=4018b500122ee53a2b2b0ccc505a5ae4&units=metric`;\n    const res = await fetch(url);\n    const resJson = await res.json();\n    console.log(resJson);\n    console.log(resJson.main);\n    if (resJson) {\n      setWeather(resJson);\n    }\n    setQuery('');\n  }\n  \n  return (\n  <>\n      <div style={{backgroundColor: '#8932a8'}}>\n      <div className=\"container py-3\">\n    <h1 className=\"text-center text-light\">React Weather PWA</h1>\n      <form className=\"input-group mx-auto\" onSubmit={getWeather} style={{width:'500px'}}>\n              <input type=\"text\" className=\"form-control\" value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder='Search for a city' />\n              <input type=\"submit\" className=\"btn btn-primary\" value=\"🔍\" />\n          </form>\n      </div>\n      </div>\n        {weather.list && (\n         <div className=\"container mt-5\">\n            <div className=\"card mx-auto mb-2\" style={{width:'18rem'}}>\n            <div class=\"card-header bg-primary text-light\"><h4><bold>\n              {weather.city.name}, {weather.city.country}</bold></h4>\n            </div>\n            <img src={`https://openweathermap.org/img/wn/${weather.list[2].weather[0].icon}@4x.png`} class=\"card-img-top\" alt=\"...\" />\n            <div className=\"card-body bg-light\">\n              <h1 className=\"card-text text-center\">{weather.list[2].main.temp.toFixed(0)}°C</h1>\n              <h4 className=\"card-text text-center\">{weather.list[2].weather[0].description}</h4>\n            </div>\n          </div>\n          <div className=\"card mx-auto mb-5\" style={{width: '18rem'}}>\n             <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item\">Wind: {weather.list[2].wind.speed} m/s | {weather.list[2].wind.deg}°</li>\n              <li class=\"list-group-item\">Humidity: {weather.list[2].main.humidity}%</li>\n              <li class=\"list-group-item\">Visibility: {weather.list[2].visibility*0.001} km</li>\n            </ul>\n          </div>\n         </div>\n        )}\n  </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}